kind: PersistentVolume
apiVersion: v1
metadata:
  name: rabbitmq-volume
  labels:
    component: rabbitmq
    function: events
spec:
  storageClassName: slow
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/rabbitmq"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rabbitmq-claim
spec:
  storageClassName: slow
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      component: rabbitmq
      function: events
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.7
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "rabbitmq-plugins --offline enable rabbitmq_management"]
          ports:
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
          env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: gf-config-secret
                  key: RABBITMQ_PASS
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: gf-config-secret
                  key: RABBITMQ_USER
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: gf-config-cookie
                  key: erlangCookie
          envFrom:
            - secretRef:
                name: gf-config-secret
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/data
              name: rabbitmq-storage
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-claim
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  type: NodePort
  ports:
    - port: 15672
      targetPort: 15672
      protocol: TCP
      name: http
    - port: 5672
      targetPort: 5672
      protocol: TCP
      name: amqp
      nodePort: 30006
  selector:
   app: rabbitmq

# kubectl delete service rabbitmq-service
# kubectl delete deployment rabbitmq-deployment
# kubectl delete persistentvolumeclaim rabbitmq-pv-claim
# kubectl delete persistentvolume rabbitmq-pv-volume